grafana:
  alerting:
    policies.yaml:
      apiVersion: 1
      policies:
        - orgId: 1
          receiver: grafana-default-email
          group_by:
            - grafana_folder
            - alertname
          routes:
            - receiver: pagerduty
              object_matchers:
                - - Critical
                  - =
                  - "true"
    rules.yaml:
      apiVersion: 1
      groups:
        - orgId: 1
          name: k8s
          folder: Kubernetes
          interval: 5m
          rules:
            - uid: cegqd5gs69jb4a
              title: pod_restart
              condition: B
              data:
                - refId: A
                  relativeTimeRange:
                    from: 600
                    to: 0
                  datasourceUid: prom
                  model:
                    editorMode: code
                    expr: rate(kube_pod_container_status_restarts_total{job="integrations/kubernetes/kube-state-metrics"}[5m])
                    instant: true
                    intervalMs: 1000
                    legendFormat: __auto
                    maxDataPoints: 43200
                    range: false
                    refId: A
                - refId: B
                  datasourceUid: __expr__
                  model:
                    conditions:
                      - evaluator:
                          params:
                            - 0
                            - 0
                          type: gt
                        operator:
                          type: and
                        query:
                          params: []
                        reducer:
                          params: []
                          type: avg
                        type: query
                    datasource:
                      name: Expression
                      type: __expr__
                      uid: __expr__
                    expression: A
                    intervalMs: 1000
                    maxDataPoints: 43200
                    refId: B
                    type: threshold
              dashboardUid: k8s_views_ns
              panelId: 75
              noDataState: NoData
              execErrState: Error
              for: 5m
              annotations:
                __dashboardUid__: k8s_views_ns
                __panelId__: "75"
                summary: alert on pod restart
              labels:
                Critical: true
              isPaused: false

    contactpoints.yaml:
      secret:
        apiVersion: 1
        contactPoints:
          - orgId: 1
            name: pagerduty
            receivers:
              - uid: pagerduty
                type: pagerduty
                settings:
                  integrationKey: XXX
                  severity: critical
                  class: ping failure
                  component: Grafana
                  group: app-stack
                  summary: |
                    {{ `{{ include "default.message" . }}` }}

    templates.yaml:
      apiVersion: 1
      templates:
        - orgId: 1
          name: my_first_template
          template: |
            {{ `
            {{ define "my_first_template" }}
            Custom notification message
            {{ end }}
            ` }}

  # Provision grafana-dashboards-kubernetes
  dashboardProviders:
    dashboardproviders.yaml:
      apiVersion: 1
      providers:
        - name: "grafana-dashboards-kubernetes"
          orgId: 1
          folder: "Kubernetes"
          type: file
          disableDeletion: true
          editable: true
          options:
            path: /var/lib/grafana/dashboards/grafana-dashboards-kubernetes
  dashboards:
    grafana-dashboards-kubernetes:
      k8s-system-api-server:
        url: https://raw.githubusercontent.com/dotdc/grafana-dashboards-kubernetes/master/dashboards/k8s-system-api-server.json
      k8s-system-coredns:
        url: https://raw.githubusercontent.com/dotdc/grafana-dashboards-kubernetes/master/dashboards/k8s-system-coredns.json
      k8s-views-global:
        url: https://raw.githubusercontent.com/dotdc/grafana-dashboards-kubernetes/master/dashboards/k8s-views-global.json
      k8s-views-namespaces:
        url: https://raw.githubusercontent.com/dotdc/grafana-dashboards-kubernetes/master/dashboards/k8s-views-namespaces.json
      k8s-views-nodes:
        url: https://raw.githubusercontent.com/dotdc/grafana-dashboards-kubernetes/master/dashboards/k8s-views-nodes.json
      k8s-views-pods:
        url: https://raw.githubusercontent.com/dotdc/grafana-dashboards-kubernetes/master/dashboards/k8s-views-pods.json

  sidecar:
    dashboards:
      enabled: true
      label: grafana_dashboard
      labelValue: "1"
      folderAnnotation: grafana_folder
      searchNamespace: ALL
      folder: /tmp/dashboards
      provider:
        foldersFromFilesStructure: true

  ingress:
    enabled: true
    ingressClassName: nginx
    hosts:
      - grafana.localhost

mimir:
  metaMonitoring:
    dashboards:
      enabled: true

tempo:
  enabled: true
  ingester:
    replicas: 2
  gateway:
    enabled: true
  traces:
    otlp:
      http:
        enabled: true

loki:
  ruler:
    enabled: true # Explicitly enable ruler
    replicas: 1
    storage:
      type: local
      local:
        directory: /etc/loki/rules
    ring:
      kvstore:
        store: memberlist
    rule_path: /tmp/loki/scratch
    alertmanager_url: https://monitoring-mimir-alertmanager:8080
    extraVolumes:
      - name: ruler-storage
        emptyDir: {}
    extraVolumeMounts:
      - name: ruler-storage
        mountPath: /etc/loki/rules
    persistence:
      enabled: false
